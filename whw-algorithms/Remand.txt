day1: 位运算 选择排序 冒泡排序 插入排序
day2: 数组求和问题  前缀和 对数器
数组求和问题: 一个数组求随机 两个索引之间数的和
解法：
1 前缀和 用一个新数组 和原数组一样长度
  每个位置存的是 原数组这个位置之前的和
  这样当你输入两个索引的时候 当第一个索引为0时 和就为新数组后面索引位置的值
  当第一个索引不为0时 两个索引之间的和就是 新数组[lastIndex]-新数组[firstIndex-1]
2 利用二维数组
     0   1   2   3  4  5
   0
   1
   2
   3
   4
   5
   第一个索引是竖着的  第二个索引是横着的 0 0存的值是索引 0-0的和 就是原数组[0]
   0-1 存的值就是原数组[0]+原数组[1]
   0-2 存的值就是原数组[0]+原数组[1]+原数组+[2]
   这样和可以直接从这个二维数组中直接取出  当第一个索引位置>第二个索引位置 不存值(不存在这种可能)
   这样占用的空间就是N*N/2
对数器:
  Math.random() [0,1)可以均等概率的返回0-1之间的数  double类型 得到这个数的概率为X X为要想的值
  获取X 概率为X的二次方怎么获得
  两个题目:
  1 已知一个函数可以概率相等的获取1-5 概率相等的获取23-65
  2 一个函数可以概率不等的获取到0-1 改成均等获取0-1
  详情 day2 类 LogarithmicProblemDemo
用对数器的知识检测数组排序时候正确：
   利用Math.random()生成一个随机的数组 长度随机 数据随机
   经过大量循环生成随机数组 排序后检查是否正确